<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAEsAhADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1Gw/5B1t/1yX+VWKr2H/IOtv+uS/yqxXpLY8J7hRRRTAKKKKA
        CiiigAooooAKKKbQAUmaTOaQmqSADSUmaQ0xoCeaSgmm0wCkJoJptUgCkJoJ602mMKQmgmmk1SQCE0lL
        1pDVAGaYaUmmmmgAmmmlNNJqkAU00UlMAJpDR3pCcVQxDTTQaQmmICaQ0UlMYGmmg9aaapALTTQTSE0w
        Amm0GkqgEzSUtNNMYE02lNNqgCm0E5pKaACaaaUmm1QATSZ5oNJTADTTQTSU0hhSGimk1QATTaKTNMAJ
        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
</value>
  </data>
</root>